{
  "$schema": "https://unpkg.com/@camunda/element-templates-json-schema/resources/schema.json",
  "name": "Carbon Reductor Connector",
  "id": "de.envite.greenbpm.carbonreductorconnector.CarbonReductor",
  "description": "Reduces the carbon emissions caused by the process instance by shifting the work to a greener time window",
  "documentationRef": "https://github.com/envite-consulting/camunda-carbon-reductor",
  "icon": {
    "contents": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Ctext y='.9em' font-size='90'%3E\uD83C\uDF31%3C/text%3E%3C/svg%3E"
  },
  "appliesTo": [
    "bpmn:ServiceTask"
  ],
  "groups": [
    {
      "id": "carbonreductor",
      "label": "Carbon Reductor"
    },
    {
      "id": "outputMapping",
      "label": "Output Mapping"
    },
    {
      "id": "implementation",
      "label": "Implementation"
    }
  ],
  "properties": [
    {
      "label": "Type",
      "group": "implementation",
      "type": "String",
      "editable": false,
      "value": "External",
      "binding": {
        "name": "camunda:type",
        "type": "property"
      }
    },
    {
      "label": "Topic",
      "group": "implementation",
      "type": "String",
      "editable": false,
      "value": "CarbonReductor",
      "binding": {
        "name": "camunda:topic",
        "type": "property"
      }
    },
    {
      "label": "Carbon Reductor Mode",
      "group": "carbonreductor",
      "id": "carbonReductorMode",
      "description": "Choice whether to time shift the execution or just measuring the potential of time shifting",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Timeshifting Mode",
          "value": "false"
        },
        {
          "name": "Measurement Only Mode",
          "value": "true"
        }
      ],
      "value": "false",
      "binding": {
        "type": "camunda:inputParameter",
        "name": "measurementOnly"
      }
    },
    {
      "label": "Location",
      "id": "location",
      "description": "The location where the process is running",
      "group": "carbonreductor",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Europe North",
          "value": "northeurope"
        },
        {
          "name": "Europe West",
          "value": "westeurope"
        },
        {
          "name": "France Central",
          "value": "francecentral"
        },
        {
          "name": "France South",
          "value": "francesouth"
        },
        {
          "name": "Germany North",
          "value": "germanynorth"
        },
        {
          "name": "Germany West Central",
          "value": "germanywestcentral"
        },
        {
          "name": "UK South",
          "value": "uksouth"
        },
        {
          "name": "UK West",
          "value": "ukwest"
        },
        {
          "name": "Switzerland North",
          "value": "switzerlandnorth"
        },
        {
          "name": "Switzerland West",
          "value": "switzerlandwest"
        },
        {
          "name": "Sweden Central",
          "value": "swedencentral"
        },
        {
          "name": "Norway East",
          "value": "norwayeast"
        },
        {
          "name": "West US",
          "value": "westus"
        }
      ],
      "binding": {
        "type": "camunda:inputParameter",
        "name": "location"
      }
    },
    {
      "label": "Duration of remaining process tasks",
      "id": "remainingProcessDuration",
      "description": "The duration (ISO 8601 format) of the remaining tasks after the Carbon Reductor",
      "group": "carbonreductor",
      "value": "PT6H",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "camunda:inputParameter",
        "name": "remainingProcessDuration"
      }
    },
    {
      "label": "Maximum process duration from milestone to finish",
      "id": "maximumProcessDuration",
      "description": "The maximum duration (ISO 8601 format) the process is allowed to run",
      "group": "carbonreductor",
      "value": "PT12H",
      "type": "String",
      "binding": {
        "type": "camunda:inputParameter",
        "name": "maximumProcessDuration"
      }
    },
    {
      "label": "Milestone",
      "id": "milestone",
      "description": "Timestamp of the chosen milestone. The milestone builds the starting point for the SLA based duration calculation: milestone + max. process duration = latest process completion date",
      "group": "carbonreductor",
      "value": "${dateTime()}",
      "type": "String",
      "binding": {
        "type": "camunda:inputParameter",
        "name": "milestone"
      }
    },
    {
      "label": "Error handling behavior",
      "id": "errorHandling",
      "description": "Defines how to handle error during fetching and calculating the time window for the timeshift",
      "group": "carbonreductor",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Continue on failure",
          "value": "CONTINUE_ON_EXCEPTION"
        },
        {
          "name": "Throw BPMN Error",
          "value": "THROW_BPMN_ERROR"
        }
      ],
      "binding": {
        "type": "camunda:inputParameter",
        "group": "carbonreductor",
        "name": "errorHandling"
      }
    },
    {
      "label": "Execution delayed?",
      "description": "Has the execution been delayed?",
      "group": "outputMapping",
      "value": "executionDelayed",
      "type": "String",
      "binding": {
        "type": "camunda:outputParameter",
        "source": "${executionDelayed}"
      }
    },
    {
      "label": "Amount of delay",
      "description": "Amount of delay",
      "group": "outputMapping",
      "value": "delayedBy",
      "type": "String",
      "binding": {
        "type": "camunda:outputParameter",
        "source": "${delayedBy}"
      }
    },
    {
      "label": "Original carbon",
      "description": "Carbon emission in gCO2/kWh if the execution is not delayed",
      "group": "outputMapping",
      "value": "carbonWithoutOptimization",
      "type": "String",
      "binding": {
        "type": "camunda:outputParameter",
        "source": "${carbonWithoutOptimization}"
      }
    },
    {
      "label": "Actual carbon",
      "description": "Carbon emission in gCO2/kWh at the time of the delayed execution",
      "group": "outputMapping",
      "value": "optimalForecastedCarbon",
      "type": "String",
      "binding": {
        "type": "camunda:outputParameter",
        "source": "${optimalForecastedCarbon}"
      }
    },
    {
      "label": "Saved carbon %",
      "description": "The percentage of saved carbon",
      "group": "outputMapping",
      "value": "savedCarbonPercentage",
      "type": "String",
      "binding": {
        "type": "camunda:outputParameter",
        "source": "${savedCarbonPercentage}"
      }
    },
    {
      "label": "Reduced Carbon",
      "description": "The reduced carbon footprint in gCO2/kWh",
      "group": "outputMapping",
      "value": "reducedCarbon",
      "type": "String",
      "binding": {
        "type": "camunda:outputParameter",
        "source": "${reducedCarbon}"
      }
    }
  ]
}