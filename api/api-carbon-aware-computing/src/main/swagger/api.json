{
  "openapi": "3.0.1",
  "info": {
    "title": "Carbon Aware Computing - Execution Forecast",
    "description": "Get the best execution time with minimal grid carbon intensity. A compatible subset of the Green Software Foundation SDK with open data. The data is licensed under the CC0 license (https://creativecommons.org/publicdomain/zero/1.0/)",
    "license": {
      "name": "Software is licensed under MIT license.",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://forecast.carbon-aware-computing.com"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "forecast"
        ],
        "summary": "Register yourself to this API. A API-Key is send to your mail address. The address is only used to inform you about incompatible changes to this service.",
        "description": "Register yourself to this API.",
        "operationId": "Register",
        "requestBody": {
          "description": "The mail address API-Key ist send",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registrationData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            },
            "x-ms-summary": "failed operation"
          },
          "204": {
            "description": "API-Key sent. Operation succeeded",
            "x-ms-summary": "API-Key sent. Operation succeeded"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/forecasts/current": {
      "get": {
        "tags": [
          "forecast"
        ],
        "summary": "Get the best execution time with minimal grid carbon intensity",
        "description": "Get the best execution time with minimal grid carbon intensity. A time intervall of the given duration within the earliest and latest execution time with the most renewable energy in the power grid of the location",
        "operationId": "GetBestExecutionTime",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "String array of named locations",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dataStartAt",
            "in": "query",
            "description": "Start time boundary of forecasted data points. Ignores current forecast data points before this time. Defaults to the earliest time in the forecast data.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dataEndAt",
            "in": "query",
            "description": "End time boundary of forecasted data points. Ignores current forecast data points after this time. Defaults to the latest time in the forecast data.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "windowSize",
            "in": "query",
            "description": "The estimated duration (in minutes) of the workload. Defaults to 5 Minutes (This is different from GSF SDK which default to the duration of a single forecast data point).",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Forecast data is available and the best execution time is provided. Tis is a subset of the GSF SDK data. No infoormation on the underlying forecast data ist provided. E.g. no forecast boundaries, no forcast data, no forecast generation date",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/emissionsForecast"
                }
              }
            },
            "x-ms-summary": "Forecast available. Operation succeeded"
          },
          "404": {
            "description": "Forecast is not available for the location or time window. Operation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            },
            "x-ms-summary": "Forecast is not available for the location or time window. Operation failed"
          },
          "400": {
            "description": "failed operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            },
            "x-ms-summary": "failed operation"
          }
        },
        "security": [
          {
            "apikey": [ ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "forecast"
        ],
        "summary": "Get a list of available locations. Not all locations are active, to avoid unnecessary computing. Send a message to 'a.mirmohammadi@bluehands.de' to activate a location.",
        "description": "Get a list of available locations. Not all locations are active, to avoid unnecessary computing. Send a message to 'a.mirmohammadi@bluehands.de' to activate a location.",
        "operationId": "GetLocations",
        "responses": {
          "200": {
            "description": "Operation succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/availableLocation"
                  }
                }
              }
            },
            "x-ms-summary": "Operation succeeded"
          }
        },
        "x-ms-visibility": "important"
      }
    }
  },
  "components": {
    "schemas": {
      "availableLocation": {
        "type": "object",
        "properties": {
          "locationName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "emissionsData": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "emissionsForecast": {
        "type": "array",
        "items": {
          "properties": {
            "location": {
              "type": "string"
            },
            "windowSize": {
              "type": "integer",
              "format": "int32"
            },
            "optimalDataPoints": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/emissionsData"
              }
            }
          }
        }
      },
      "problemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "registrationData": {
        "type": "object",
        "properties": {
          "mailAddress": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}